{
    "id": 179,
    "name": "Denumerant",
    "description": "number of ways to make n cents with coins of 1 5 10 20 50 100 cents",
    "specification": "{S = Prod(Sequence(Z),Sequence(Prod(Z,Z,Z,Z,Z)),Sequence(Prod(Z,Z,Z,Z,Z,Z,Z,Z,Z,Z)),Sequence(Prod(Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z)),Sequence(Prod(Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z)),Sequence(Prod(Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z)))}",
    "labeled": false,
    "symbol": "S",
    "terms": [
        1,
        1,
        1,
        1,
        1,
        2,
        2,
        2,
        2,
        2,
        4,
        4,
        4,
        4,
        4,
        6,
        6,
        6,
        6,
        6,
        10
    ],
    "references": [
        "EIS A001306"
    ],
    "gf": "1/(-1+_x)/(_x^5-1)/(_x^10-1)/(_x^20-1)/(_x^50-1)/(_x^100-1)",
    "rec": "{-205206259440-5607063274*_n+120*_f(_n)+1800*_f(_n+2)-_n^5+600*_f(_n+1)-61282125*_n^2+24600*_f(_n+6)+6000000*_f(_n+85)+6000000*_f(_n+86)+2760000*_f(_n+38)+2880000*_f(_n+39)+3000000*_f(_n+40)+3120000*_f(_n+41)+3240000*_f(_n+42)+3360000*_f(_n+43)+3480000*_f(_n+44)+3600000*_f(_n+45)+3720000*_f(_n+46)+3840000*_f(_n+47)+3960000*_f(_n+48)+4080000*_f(_n+49)+4199880*_f(_n+50)+4319400*_f(_n+51)+4438200*_f(_n+52)+4555800*_f(_n+53)+4671600*_f(_n+54)+4785000*_f(_n+55)+4895400*_f(_n+56)+5002200*_f(_n+57)+5104800*_f(_n+58)+5202600*_f(_n+59)+5295120*_f(_n+60)+5382000*_f(_n+61)+5463000*_f(_n+62)+5538000*_f(_n+63)+5607000*_f(_n+64)+5670000*_f(_n+65)+5727000*_f(_n+66)+5778000*_f(_n+67)+5823000*_f(_n+68)+5862000*_f(_n+69)+5895120*_f(_n+70)+5922600*_f(_n+71)+5944800*_f(_n+72)+5962200*_f(_n+73)+5975400*_f(_n+74)+5985000*_f(_n+75)+5991600*_f(_n+76)+5995800*_f(_n+77)+5998200*_f(_n+78)+5999400*_f(_n+79)+5999880*_f(_n+80)+6000000*_f(_n+81)+6000000*_f(_n+82)+6000000*_f(_n+83)+6000000*_f(_n+84)+15000*_f(_n+5)+8400*_f(_n+4)+4200*_f(_n+3)+6000000*_f(_n+87)-334885*_n^3+5607000*_f(_n+116)+5538000*_f(_n+117)+5463000*_f(_n+118)+5382000*_f(_n+119)+5295120*_f(_n+120)+5202600*_f(_n+121)+5104800*_f(_n+122)+5002200*_f(_n+123)+4895400*_f(_n+124)+4785000*_f(_n+125)+4671600*_f(_n+126)+4555800*_f(_n+127)+4438200*_f(_n+128)+4319400*_f(_n+129)+4199880*_f(_n+130)+4080000*_f(_n+131)+3960000*_f(_n+132)+3840000*_f(_n+133)+3720000*_f(_n+134)+3600000*_f(_n+135)+3480000*_f(_n+136)+3360000*_f(_n+137)+3240000*_f(_n+138)+3120000*_f(_n+139)+3000000*_f(_n+140)+2880000*_f(_n+141)+2760000*_f(_n+142)+2640000*_f(_n+143)+2520000*_f(_n+144)+2400000*_f(_n+145)+2280000*_f(_n+146)+2160000*_f(_n+147)+2040000*_f(_n+148)+1920000*_f(_n+149)+1800120*_f(_n+150)+1680600*_f(_n+151)+1561800*_f(_n+152)+1444200*_f(_n+153)+1328400*_f(_n+154)+1215000*_f(_n+155)+1104600*_f(_n+156)+997800*_f(_n+157)+895200*_f(_n+158)+797400*_f(_n+159)+704880*_f(_n+160)+618000*_f(_n+161)+537000*_f(_n+162)+462000*_f(_n+163)+393000*_f(_n+164)+330000*_f(_n+165)+273000*_f(_n+166)+222000*_f(_n+167)+177000*_f(_n+168)+138000*_f(_n+169)+104880*_f(_n+170)+77400*_f(_n+171)+55200*_f(_n+172)+6000000*_f(_n+88)+6000000*_f(_n+89)+6000000*_f(_n+90)+6000000*_f(_n+91)+6000000*_f(_n+92)+6000000*_f(_n+93)+6000000*_f(_n+94)+6000000*_f(_n+95)+6000000*_f(_n+96)+6000000*_f(_n+97)+6000000*_f(_n+98)+6000000*_f(_n+99)+5999880*_f(_n+100)+5999400*_f(_n+101)+5998200*_f(_n+102)+5995800*_f(_n+103)+5991600*_f(_n+104)+5985000*_f(_n+105)+5975400*_f(_n+106)+5962200*_f(_n+107)+5944800*_f(_n+108)+5922600*_f(_n+109)+5895120*_f(_n+110)+5862000*_f(_n+111)+5823000*_f(_n+112)+5778000*_f(_n+113)+5727000*_f(_n+114)+5670000*_f(_n+115)-915*_n^4+37800*_f(_n+7)+55200*_f(_n+8)+77400*_f(_n+9)+104880*_f(_n+10)+138000*_f(_n+11)+177000*_f(_n+12)+222000*_f(_n+13)+273000*_f(_n+14)+330000*_f(_n+15)+393000*_f(_n+16)+462000*_f(_n+17)+537000*_f(_n+18)+618000*_f(_n+19)+704880*_f(_n+20)+797400*_f(_n+21)+895200*_f(_n+22)+997800*_f(_n+23)+1104600*_f(_n+24)+1215000*_f(_n+25)+1328400*_f(_n+26)+1444200*_f(_n+27)+1561800*_f(_n+28)+1680600*_f(_n+29)+1800120*_f(_n+30)+1920000*_f(_n+31)+2040000*_f(_n+32)+2160000*_f(_n+33)+2280000*_f(_n+34)+2400000*_f(_n+35)+2520000*_f(_n+36)+2640000*_f(_n+37)+37800*_f(_n+173)+24600*_f(_n+174)+15000*_f(_n+175)+8400*_f(_n+176)+4200*_f(_n+177)+1800*_f(_n+178)+600*_f(_n+179)+120*_f(_n+180), _f(0) = 1, _f(1) = 1, _f(2) = 1, _f(3) = 1, _f(4) = 1, _f(5) = 2, _f(6) = 2, _f(7) = 2, _f(8) = 2, _f(9) = 2,_f(10) = 4, _f(11) = 4, _f(12) = 4, _f(13) = 4, _f(14) = 4, _f(15) = 6, _f(16)= 6, _f(17) = 6, _f(18) = 6, _f(19) = 6, _f(20) = 10, _f(21) = 10, _f(22) = 10, _f(23) = 10, _f(24) = 10, _f(25) = 14, _f(26) = 14, _f(27) = 14, _f(28) = 14, _f(29) = 14, _f(30) = 20, _f(31) = 20, _f(32) = 20, _f(33) = 20, _f(34) = 20, _f(35) = 26, _f(36) = 26, _f(37) = 26, _f(38) = 26, _f(39) = 26, _f(40) = 35, _f(41) = 35, _f(42) = 35, _f(43) = 35, _f(44) = 35, _f(45) = 44, _f(46) = 44, _f(47) = 44, _f(48) = 44, _f(49) = 44, _f(50) = 57, _f(51) = 57, _f(52) = 57, _f(53) = 57, _f(54) = 57, _f(55) = 70, _f(56) = 70, _f(57) = 70, _f(58) = 70, _f(59) = 70, _f(60) = 88, _f(61) = 88, _f(62) = 88, _f(63) = 88, _f(64) = 88, _f(65) = 106, _f(66) = 106, _f(67) = 106, _f(68) = 106, _f(69) = 106, _f(70)= 130, _f(71) = 130, _f(72) = 130, _f(73) = 130, _f(74) = 130, _f(75) = 154, _f(76) = 154, _f(77) = 154, _f(78) = 154, _f(79) = 154, _f(80) = 185, _f(81) =185, _f(82) = 185, _f(83) = 185, _f(84) = 185, _f(85) = 216, _f(86) = 216, _f(87) = 216, _f(88) = 216, _f(89) = 216, _f(90) = 255, _f(91) = 255, _f(92) = 255, _f(93) = 255, _f(94) = 255, _f(95) = 294, _f(96) = 294, _f(97) = 294, _f(98) = 294, _f(99) = 294, _f(100) = 344, _f(101) = 344, _f(102) = 344, _f(103)= 344, _f(104) = 344, _f(105) = 394, _f(106) = 394, _f(107) = 394, _f(108) = 394, _f(109) = 394, _f(110) = 456, _f(111) = 456, _f(112) = 456, _f(113) = 456, _f(114) = 456, _f(115) = 518, _f(116) = 518, _f(117) = 518, _f(118) = 518, _f(119) = 518, _f(120) = 595, _f(121) = 595, _f(122) = 595, _f(123) = 595, _f(124) = 595, _f(125) = 672, _f(126) = 672, _f(127) = 672, _f(128) = 672, _f(129) = 672, _f(130) = 765, _f(131) = 765, _f(132) = 765, _f(133) = 765, _f(134) =765, _f(135) = 858, _f(136) = 858, _f(137) = 858, _f(138) = 858, _f(139) = 858, _f(140) = 970, _f(141) = 970, _f(142) = 970, _f(143) = 970, _f(144) = 970, _f(145) = 1082, _f(146) = 1082, _f(147) = 1082, _f(148) = 1082, _f(149) = 1082, _f(150) = 1216, _f(151) = 1216, _f(152) = 1216, _f(153) = 1216, _f(154) = 1216, _f(155) = 1350, _f(156) = 1350, _f(157) = 1350, _f(158) = 1350, _f(159)= 1350, _f(160) = 1509, _f(161) = 1509, _f(162) = 1509, _f(163) = 1509, _f(164) = 1509, _f(165) = 1668, _f(166) = 1668, _f(167) = 1668, _f(168) = 1668, _f(169) = 1668, _f(170) = 1855, _f(171) = 1855, _f(172) = 1855, _f(173) = 1855, _f(174) = 1855, _f(175) = 2042, _f(176) = 2042, _f(177) = 2042, _f(178) = 2042, _f(179) = 2042}",
    "closedform": "76320111/400000000*_n+1/600000000*_n^5+66867/8000000*_n^2+15127/120000000*_n^3+31/40000000*_n^4+Sum(1/400000*(25*_alpha^49+25*_alpha^48+25*_alpha^47+16*_alpha^46+16*_alpha^45+16*_alpha^44+16*_alpha^43+16*_alpha^42+7*_alpha^41+7*_alpha^40+57*_alpha^39+57*_alpha^38+57*_alpha^37+32*_alpha^36+32*_alpha^35+32*_alpha^34+32*_alpha^33+32*_alpha^32+7*_alpha^31+7*_alpha^30+57*_alpha^29+57*_alpha^28+57*_alpha^27+16*_alpha^26+16*_alpha^25+16*_alpha^24+16*_alpha^23+16*_alpha^22-25*_alpha^21-25*_alpha^20+25*_alpha^19+25*_alpha^18+25*_alpha^17-25*_alpha^11-25*_alpha^10+25*_alpha^9+25*_alpha^8+25*_alpha^7-25*_alpha-25)*_alpha^(-_n-2)*(_n+1),_alpha = RootOf(_Z^50+2*_Z^40+2*_Z^30+2*_Z^20+2*_Z^10+1))+Sum(1/400000*(2339*_alpha^49+2364*_alpha^48+2389*_alpha^47+2414*_alpha^46+1629*_alpha^45+1645*_alpha^44+1661*_alpha^43+1677*_alpha^42+1693*_alpha^41+854*_alpha^40+5539*_alpha^39+5596*_alpha^38+5653*_alpha^37+5710*_alpha^36+3517*_alpha^35+3549*_alpha^34+3581*_alpha^33+3613*_alpha^32+3645*_alpha^31+1302*_alpha^30+5987*_alpha^29+6044*_alpha^28+6101*_alpha^27+6158*_alpha^26+2525*_alpha^25+2541*_alpha^24+2557*_alpha^23+2573*_alpha^22+2589*_alpha^21-1290*_alpha^20+3363*_alpha^19+3388*_alpha^18+3413*_alpha^17+3438*_alpha^16+893*_alpha^15+893*_alpha^14+893*_alpha^13+893*_alpha^12+893*_alpha^11-1802*_alpha^10+2851*_alpha^9+2876*_alpha^8+2901*_alpha^7+2926*_alpha^6+381*_alpha^5+381*_alpha^4+381*_alpha^3+381*_alpha^2+381*_alpha-2314)*_alpha^(-1-_n),_alpha = RootOf(_Z^50+2*_Z^40+2*_Z^30+2*_Z^20+2*_Z^10+1))+Sum(1/600000000*(_alpha^3+2*_alpha^2+3*_alpha+4)*_alpha^(-_n-5)*(_n+1)*(_n+2)*(_n+3)*(_n+4),_alpha = RootOf(_Z^4+_Z^3+_Z^2+_Z+1))+Sum(-1/150000000*(362*_alpha^3+273*_alpha^2+183*_alpha+92)*_alpha^(-_n-4)*(_n+1)*(_n+2)*(_n+3),_alpha = RootOf(_Z^4+_Z^3+_Z^2+_Z+1))+Sum(1/100000000*(7469*_alpha^3-21311*_alpha^2-14388*_alpha-7285)*_alpha^(-_n-3)*(_n+2)*(_n+1),_alpha = RootOf(_Z^4+_Z^3+_Z^2+_Z+1))+Sum(1/50000000*(159528*_alpha^3+326525*_alpha^2-297383*_alpha-152243)*_alpha^(-_n-2)*(_n+1),_alpha = RootOf(_Z^4+_Z^3+_Z^2+_Z+1))+Sum(1/2000000000*(66346979*_alpha^3+139075078*_alpha^2+218483057*_alpha-60257259)*_alpha^(-1-_n),_alpha =RootOf(_Z^4+_Z^3+_Z^2+_Z+1))+Sum(1/24000000*(_alpha^4-_alpha^3-_alpha^2-_alpha-1)*_alpha^(-_n-4)*(_n+1)*(_n+2)*(_n+3),_alpha = RootOf(_Z^5+1))+Sum(1/8000000*(92*_alpha^4+93*_alpha^3-89*_alpha^2-90*_alpha-91)*_alpha^(-_n-3)*(_n+2)*(_n+1),_alpha = RootOf(_Z^5+1))+Sum(1/16000000*(14553*_alpha^4+14921*_alpha^3+15293*_alpha^2-13829*_alpha-14189)*_alpha^(-_n-2)*(_n+1),_alpha = RootOf(_Z^5+1))+Sum(1/16000000*(302939*_alpha^4+317492*_alpha^3+332413*_alpha^2+347706*_alpha-288750)*_alpha^(-1-_n),_alpha = RootOf(_Z^5+1))+Sum(-1/1000*(22*_alpha^39+22*_alpha^38+22*_alpha^37+22*_alpha^36+25*_alpha^35+25*_alpha^34+25*_alpha^33+25*_alpha^32+25*_alpha^31+28*_alpha^30+6*_alpha^29+6*_alpha^28+6*_alpha^27+6*_alpha^26-6*_alpha^20+16*_alpha^19+16*_alpha^18+16*_alpha^17+16*_alpha^16+15*_alpha^15+15*_alpha^14+15*_alpha^13+15*_alpha^12+15*_alpha^11+14*_alpha^10-8*_alpha^9-8*_alpha^8-8*_alpha^7-8*_alpha^6-15*_alpha^5-15*_alpha^4-15*_alpha^3-15*_alpha^2-15*_alpha-22)*_alpha^(-1-_n),_alpha = RootOf(_Z^40-_Z^30+_Z^20-_Z^10+1))+37561491/80000000",
    "equiv": "(1/6000000*exp(Complex(1)*(arctan((-3*RootOf(64*_Z^10-160*_Z^9+240*_Z^8-280*_Z^7+280*_Z^6-212*_Z^5+115*_Z^4-35*_Z^3-5*_Z^2+5*_Z-1,-.309016994374895)^2*RootOf(4096*_Z^12-5120*_Z^10+3840*_Z^8-1600*_Z^6-800*_Z^4+125,-.951056516295122)+RootOf(4096*_Z^12-5120*_Z^10+3840*_Z^8-1600*_Z^6-800*_Z^4+125,-.951056516295122)^3+2*RootOf(64*_Z^10-160*_Z^9+240*_Z^8-280*_Z^7+280*_Z^6-212*_Z^5+115*_Z^4-35*_Z^3-5*_Z^2+5*_Z-1,-.309016994374895)*RootOf(4096*_Z^12-5120*_Z^10+3840*_Z^8-1600*_Z^6-800*_Z^4+125,-.951056516295122)-RootOf(4096*_Z^12-5120*_Z^10+3840*_Z^8-1600*_Z^6-800*_Z^4+125,-.951056516295122))/(3*RootOf(64*_Z^10-160*_Z^9+240*_Z^8-280*_Z^7+280*_Z^6-212*_Z^5+115*_Z^4-35*_Z^3-5*_Z^2+5*_Z-1,-.309016994374895)*RootOf(4096*_Z^12-5120*_Z^10+3840*_Z^8-1600*_Z^6-800*_Z^4+125,-.951056516295122)^2-RootOf(64*_Z^10-160*_Z^9+240*_Z^8-280*_Z^7+280*_Z^6-212*_Z^5+115*_Z^4-35*_Z^3-5*_Z^2+5*_Z-1,-.309016994374895)^3-RootOf(4096*_Z^12-5120*_Z^10+3840*_Z^8-1600*_Z^6-800*_Z^4+125,-.951056516295122)^2+RootOf(64*_Z^10-160*_Z^9+240*_Z^8-280*_Z^7+280*_Z^6-212*_Z^5+115*_Z^4-35*_Z^3-5*_Z^2+5*_Z-1,-.309016994374895)^2-RootOf(64*_Z^10-160*_Z^9+240*_Z^8-280*_Z^7+280*_Z^6-212*_Z^5+115*_Z^4-35*_Z^3-5*_Z^2+5*_Z-1,-.309016994374895)+1))+Pi)*_n)/(-1+RootOf(_Z^4-_Z^3+_Z^2-_Z+1,Complex(-.309016994374895,-.951056516295122)))/(RootOf(_Z^4-_Z^3+_Z^2-_Z+1,Complex(-.309016994374895,-.951056516295122))^5-1)/RootOf(_Z^4-_Z^3+_Z^2-_Z+1,Complex(-.309016994374895,-.951056516295122))^180+1/6000000*exp(Complex(-1)*(arctan((-3*RootOf(64*_Z^10-160*_Z^9+240*_Z^8-280*_Z^7+280*_Z^6-212*_Z^5+115*_Z^4-35*_Z^3-5*_Z^2+5*_Z-1,-.309016994374895)^2*RootOf(4096*_Z^12-5120*_Z^10+3840*_Z^8-1600*_Z^6-800*_Z^4+125,-.951056516295122)+RootOf(4096*_Z^12-5120*_Z^10+3840*_Z^8-1600*_Z^6-800*_Z^4+125,-.951056516295122)^3+2*RootOf(64*_Z^10-160*_Z^9+240*_Z^8-280*_Z^7+280*_Z^6-212*_Z^5+115*_Z^4-35*_Z^3-5*_Z^2+5*_Z-1,-.309016994374895)*RootOf(4096*_Z^12-5120*_Z^10+3840*_Z^8-1600*_Z^6-800*_Z^4+125,-.951056516295122)-RootOf(4096*_Z^12-5120*_Z^10+3840*_Z^8-1600*_Z^6-800*_Z^4+125,-.951056516295122))/(3*RootOf(64*_Z^10-160*_Z^9+240*_Z^8-280*_Z^7+280*_Z^6-212*_Z^5+115*_Z^4-35*_Z^3-5*_Z^2+5*_Z-1,-.309016994374895)*RootOf(4096*_Z^12-5120*_Z^10+3840*_Z^8-1600*_Z^6-800*_Z^4+125,-.951056516295122)^2-RootOf(64*_Z^10-160*_Z^9+240*_Z^8-280*_Z^7+280*_Z^6-212*_Z^5+115*_Z^4-35*_Z^3-5*_Z^2+5*_Z-1,-.309016994374895)^3-RootOf(4096*_Z^12-5120*_Z^10+3840*_Z^8-1600*_Z^6-800*_Z^4+125,-.951056516295122)^2+RootOf(64*_Z^10-160*_Z^9+240*_Z^8-280*_Z^7+280*_Z^6-212*_Z^5+115*_Z^4-35*_Z^3-5*_Z^2+5*_Z-1,-.309016994374895)^2-RootOf(64*_Z^10-160*_Z^9+240*_Z^8-280*_Z^7+280*_Z^6-212*_Z^5+115*_Z^4-35*_Z^3-5*_Z^2+5*_Z-1,-.309016994374895)+1))+Pi)*conjugate(_n))/(-1+RootOf(_Z^4-_Z^3+_Z^2-_Z+1,Complex(-.309016994374895,.951056516295122)))/(RootOf(_Z^4-_Z^3+_Z^2-_Z+1,Complex(-.309016994374895,.951056516295122))^5-1)/RootOf(_Z^4-_Z^3+_Z^2-_Z+1,Complex(-.309016994374895,.951056516295122))^180)*_n^3*(RootOf(64*_Z^10-160*_Z^9+240*_Z^8-280*_Z^7+280*_Z^6-212*_Z^5+115*_Z^4-35*_Z^3-5*_Z^2+5*_Z-1,-.309016994374895)^6+3*RootOf(64*_Z^10-160*_Z^9+240*_Z^8-280*_Z^7+280*_Z^6-212*_Z^5+115*_Z^4-35*_Z^3-5*_Z^2+5*_Z-1,-.309016994374895)^4*RootOf(4096*_Z^12-5120*_Z^10+3840*_Z^8-1600*_Z^6-800*_Z^4+125,-.951056516295122)^2+3*RootOf(64*_Z^10-160*_Z^9+240*_Z^8-280*_Z^7+280*_Z^6-212*_Z^5+115*_Z^4-35*_Z^3-5*_Z^2+5*_Z-1,-.309016994374895)^2*RootOf(4096*_Z^12-5120*_Z^10+3840*_Z^8-1600*_Z^6-800*_Z^4+125,-.951056516295122)^4+RootOf(4096*_Z^12-5120*_Z^10+3840*_Z^8-1600*_Z^6-800*_Z^4+125,-.951056516295122)^6-2*RootOf(64*_Z^10-160*_Z^9+240*_Z^8-280*_Z^7+280*_Z^6-212*_Z^5+115*_Z^4-35*_Z^3-5*_Z^2+5*_Z-1,-.309016994374895)^5-4*RootOf(64*_Z^10-160*_Z^9+240*_Z^8-280*_Z^7+280*_Z^6-212*_Z^5+115*_Z^4-35*_Z^3-5*_Z^2+5*_Z-1,-.309016994374895)^3*RootOf(4096*_Z^12-5120*_Z^10+3840*_Z^8-1600*_Z^6-800*_Z^4+125,-.951056516295122)^2-2*RootOf(64*_Z^10-160*_Z^9+240*_Z^8-280*_Z^7+280*_Z^6-212*_Z^5+115*_Z^4-35*_Z^3-5*_Z^2+5*_Z-1,-.309016994374895)*RootOf(4096*_Z^12-5120*_Z^10+3840*_Z^8-1600*_Z^6-800*_Z^4+125,-.951056516295122)^4+3*RootOf(64*_Z^10-160*_Z^9+240*_Z^8-280*_Z^7+280*_Z^6-212*_Z^5+115*_Z^4-35*_Z^3-5*_Z^2+5*_Z-1,-.309016994374895)^4+2*RootOf(64*_Z^10-160*_Z^9+240*_Z^8-280*_Z^7+280*_Z^6-212*_Z^5+115*_Z^4-35*_Z^3-5*_Z^2+5*_Z-1,-.309016994374895)^2*RootOf(4096*_Z^12-5120*_Z^10+3840*_Z^8-1600*_Z^6-800*_Z^4+125,-.951056516295122)^2-RootOf(4096*_Z^12-5120*_Z^10+3840*_Z^8-1600*_Z^6-800*_Z^4+125,-.951056516295122)^4-4*RootOf(64*_Z^10-160*_Z^9+240*_Z^8-280*_Z^7+280*_Z^6-212*_Z^5+115*_Z^4-35*_Z^3-5*_Z^2+5*_Z-1,-.309016994374895)^3+4*RootOf(64*_Z^10-160*_Z^9+240*_Z^8-280*_Z^7+280*_Z^6-212*_Z^5+115*_Z^4-35*_Z^3-5*_Z^2+5*_Z-1,-.309016994374895)*RootOf(4096*_Z^12-5120*_Z^10+3840*_Z^8-1600*_Z^6-800*_Z^4+125,-.951056516295122)^2+3*RootOf(64*_Z^10-160*_Z^9+240*_Z^8-280*_Z^7+280*_Z^6-212*_Z^5+115*_Z^4-35*_Z^3-5*_Z^2+5*_Z-1,-.309016994374895)^2-RootOf(4096*_Z^12-5120*_Z^10+3840*_Z^8-1600*_Z^6-800*_Z^4+125,-.951056516295122)^2-2*RootOf(64*_Z^10-160*_Z^9+240*_Z^8-280*_Z^7+280*_Z^6-212*_Z^5+115*_Z^4-35*_Z^3-5*_Z^2+5*_Z-1,-.309016994374895)+1)^(-1/2*ln(exp(-_n)))"
}